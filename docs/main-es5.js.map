{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/components/words/words.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/words/words.component.scss","webpack:///src/app/components/words/words.component.ts","webpack:///src/app/service/get-words.service.ts","webpack:///src/app/speech.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","imports","forRoot","AppComponent","getWordsService","speech","title","currentModuleIndex","currentWordIndex","totalWords","correctCount","wrongCount","wrongWords","english","phoneticSymbols","chinese","answer","isCompleted","isDisabled","getJson","subscribe","data","console","log","allWords","goToModule","goToWord","currentWords","length","value","currentWord","toString","trim","checkCompleted","index","Speak","count","forEach","word","undefined","currentModule","correct","wrong","push","selector","template","AppModule","declarations","providers","bootstrap","WordsComponent","formBuilder","answerChangedEvent","answerInput","changes","Answer","wordFrom","group","required","speak","emit","English","GetWordsService","http","get","providedIn","SpeechService","hasBrowserSupport","init","voices","voice","name","lang","error","text","queue","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;ACZA;AAAe;;;AAAA;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,QAAMC,MAAM,GAAW,EAAvB;;AAMA,QAAaC,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAJ5B,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,OAAb,CAAqBH,MAArB,CAAD,CADD;AAERF,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI4B,GAAhBG,gBAAgB,CAAhB;;;;;;;;ACVb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAaG,YAAY;AAYvB,4BAAoBC,eAApB,EAA8DC,MAA9D,EAAqF;AAAA;;AAAjE,aAAAD,eAAA,GAAAA,eAAA;AAA0C,aAAAC,MAAA,GAAAA,MAAA;AAX9D,aAAAC,KAAA,GAAQ,cAAR;AAEA,aAAAC,kBAAA,GAAqB,CAArB;AAGA,aAAAC,gBAAA,GAAmB,CAAnB;AAEA,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,YAAA,GAAe,CAAf;AACA,aAAAC,UAAA,GAAa,CAAb;AACA,aAAAC,UAAA,GAAa,EAAb;AAUA,aAAAC,OAAA,GAAkB,EAAlB;AACA,aAAAC,eAAA,GAA0B,IAA1B;AACA,aAAAC,OAAA,GAAkB,IAAlB;AACA,aAAAC,MAAA,GAAiB,EAAjB;AACA,aAAAC,WAAA,GAAuB,KAAvB;AACA,aAAAC,UAAA,GAAa,KAAb;AAdwF;;AAZjE;AAAA;AAAA,eAavB,oBAAQ;AAAA;;AACN,eAAKd,eAAL,CAAqBe,OAArB,GAA+BC,SAA/B,CAAyC,UAAAC,IAAI,EAAI;AAC/CC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAI,CAACG,QAAL,GAAgBH,IAAhB;;AACA,iBAAI,CAACI,UAAL,CAAgB,CAAhB;AACD,WAJD;AAKD;AAnBsB;AAAA;AAAA,eA4BvB,wBAAe;AACb,eAAKjB,gBAAL,IAAyB,CAAzB;;AACA,cAAI,KAAKA,gBAAL,GAAwB,CAA5B,EAA+B;AAC7B,iBAAKA,gBAAL,GAAwB,CAAxB;AACD;;AACD,eAAKkB,QAAL,CAAc,KAAKlB,gBAAnB;AACD;AAlCsB;AAAA;AAAA,eAoCvB,oBAAW;AACT,eAAKA,gBAAL,IAAyB,CAAzB;;AACA,cAAI,KAAKA,gBAAL,IAAyB,KAAKmB,YAAL,CAAkBC,MAA/C,EAAuD;AACrD,iBAAKpB,gBAAL,GAAwB,KAAKmB,YAAL,CAAkBC,MAAlB,GAA2B,CAAnD;AACD;;AACD,eAAKF,QAAL,CAAc,KAAKlB,gBAAnB;AACD;AA1CsB;AAAA;AAAA,eA4CvB,uBAAcqB,KAAd,EAAqB;AACnB,eAAKC,WAAL,CAAiBd,MAAjB,GAA0Ba,KAAK,CAACE,QAAN,GAAiBC,IAAjB,EAA1B;AACA,eAAKf,WAAL,GAAmB,KAAKgB,cAAL,EAAnB;AACD;AA/CsB;AAAA;AAAA,eAiDvB,kBAASC,KAAT,EAAgB;AACd,eAAKJ,WAAL,GAAmB,KAAKH,YAAL,CAAkBO,KAAlB,CAAnB;AACA,eAAKrB,OAAL,GAAe,KAAKiB,WAAL,CAAiB,SAAjB,CAAf;AACA,eAAKhB,eAAL,GAAuB,KAAKgB,WAAL,CAAiB,iBAAjB,CAAvB;AACA,eAAKf,OAAL,GAAe,KAAKe,WAAL,CAAiB,SAAjB,CAAf;AACA,eAAKd,MAAL,GAAc,KAAKc,WAAL,CAAiB,QAAjB,CAAd;AACA,eAAKzB,MAAL,CAAY8B,KAAZ,CAAkB,KAAKtB,OAAvB;AACD;AAxDsB;AAAA;AAAA,eAyDvB,0BAAc;AACZ,cAAIuB,KAAK,GAAG,CAAZ;AACA,eAAKT,YAAL,CAAkBU,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAChC,gBAAIA,IAAI,CAACtB,MAAL,KAAgBuB,SAApB,EAA+B,CAC9B,CADD,MAEK,IAAID,IAAI,CAACtB,MAAL,CAAYY,MAAZ,GAAqB,CAAzB,EAA4B;AAC/BQ,mBAAK;AACN;AACF,WAND;AAQA,iBAAQA,KAAK,KAAK,KAAK3B,UAAvB;AACD;AApEsB;AAAA;AAAA,eAsEvB,sBAAa;AACX,eAAKQ,WAAL,GAAmB,KAAnB;AACA,eAAKC,UAAL,GAAkB,KAAlB;AACA,eAAKX,kBAAL,IAA2B,CAA3B;AACAe,iBAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKhB,kBAA/C;;AACA,cAAI,KAAKA,kBAAL,KAA4B,KAAKiB,QAAL,CAAcI,MAA9C,EAAsD;AACpD,iBAAKrB,kBAAL,GAA0B,KAAKiB,QAAL,CAAcI,MAAd,GAAuB,CAAjD;AACD;;AACD,eAAKH,UAAL,CAAgB,KAAKlB,kBAArB;AACD;AA/EsB;AAAA;AAAA,eAiFvB,0BAAiB;AACf,eAAKU,WAAL,GAAmB,KAAnB;AACA,eAAKC,UAAL,GAAkB,KAAlB;AACA,eAAKX,kBAAL,IAA2B,CAA3B;;AACA,cAAI,KAAKA,kBAAL,GAA0B,CAA9B,EAAiC;AAC/B,iBAAKA,kBAAL,GAA0B,CAA1B;AACD;;AACD,eAAKkB,UAAL,CAAgB,KAAKlB,kBAArB;AACD;AAzFsB;AAAA;AAAA,eA2FvB,oBAAW2B,KAAX,EAAkB;AAChB,eAAKtB,UAAL,GAAkB,EAAlB;AACA,eAAKF,YAAL,GAAoB,CAApB;AACA,eAAKC,UAAL,GAAkB,CAAlB;AACA,eAAKH,gBAAL,GAAwB,CAAxB;AACA,eAAKgC,aAAL,GAAqB,KAAKhB,QAAL,CAAcU,KAAd,EAAqB,MAArB,CAArB;AAEA,eAAKV,QAAL,CAAcU,KAAd,EAAqB,OAArB,EAA8BG,OAA9B,CAAsC,UAAAC,IAAI,EAAI;AAC5C,gBAAIA,IAAI,CAACtB,MAAL,KAAgBuB,SAApB,EAA+B;AAC7BD,kBAAI,CAACtB,MAAL,GAAc,EAAd;AACD;AACF,WAJD;AAMA,eAAKW,YAAL,GAAoB,KAAKH,QAAL,CAAcU,KAAd,EAAqB,OAArB,CAApB;AACA,eAAKzB,UAAL,GAAkB,KAAKkB,YAAL,CAAkBC,MAApC;AACA,eAAKF,QAAL,CAAc,KAAKlB,gBAAnB;AACD;AA3GsB;AAAA;AAAA,eA6GvB,qBAAY;AAAA;;AACV,eAAKU,UAAL,GAAkB,IAAlB;AACA,eAAKN,UAAL,GAAkB,EAAlB;AACA,cAAI6B,OAAO,GAAG,CAAd;AACA,cAAIC,KAAK,GAAG,CAAZ;AACA,eAAKf,YAAL,CAAkBU,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAChC,gBAAIA,IAAI,CAAC,QAAD,CAAJ,KAAmBA,IAAI,CAAC,SAAD,CAA3B,EAAwC;AACtCG,qBAAO,IAAI,CAAX;AACD,aAFD,MAGK;AACHC,mBAAK,IAAI,CAAT;;AACA,oBAAI,CAAC9B,UAAL,CAAgB+B,IAAhB,CAAqBL,IAArB;AACD;AACF,WARD;AAUA,eAAK5B,YAAL,GAAoB+B,OAApB;AACA,eAAK9B,UAAL,GAAkB+B,KAAlB;AACD;AA9HsB;AAAA;AAAA,eAgIvB,kBAAS;AACP,eAAKzB,WAAL,GAAmB,KAAnB;AACA,eAAKC,UAAL,GAAkB,KAAlB;AACA,eAAKS,YAAL,GAAoB,KAAKf,UAAzB;AAEA,eAAKe,YAAL,CAAkBU,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAChCA,gBAAI,CAAC,QAAD,CAAJ,GAAiB,EAAjB;AACD,WAFD;AAIA,eAAK1B,UAAL,GAAkB,EAAlB;AACA,eAAKF,YAAL,GAAoB,CAApB;AACA,eAAKC,UAAL,GAAkB,CAAlB;AACA,eAAKH,gBAAL,GAAwB,CAAxB;AACA,eAAKC,UAAL,GAAkB,KAAKkB,YAAL,CAAkBC,MAApC;AACA,eAAKF,QAAL,CAAc,KAAKlB,gBAAnB;AACD;AA/IsB;;AAAA;AAAA,OAAzB;;;;cAYuC;;cAAiC;;;;AAZ3DL,gBAAY,6DALxB,gEAAU;AACTyC,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,uFAFS;;;;AAAA,KAAV,CAKwB,GAAZ1C,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyBb,QAAa2C,SAAS;AAAA;AAAA,KAAtB;;AAAaA,aAAS,6DApBrB,+DAAS;AACRC,kBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,CADN;AAKR9C,aAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,EAOP,sEAPO,EAQP,gFARO,EASP,yEATO,EAUP,qEAVO,CALD;AAiBR+C,eAAS,EAAE,EAjBH;AAkBRC,eAAS,EAAE,CAAC,2DAAD;AAlBH,KAAT,CAoBqB,GAATH,SAAS,CAAT;;;;;;;;AClCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAaI,cAAc;AAWzB,8BAAoBC,WAApB,EAAsD9C,MAAtD,EAA6E;AAAA;;AAAzD,aAAA8C,WAAA,GAAAA,WAAA;AAAkC,aAAA9C,MAAA,GAAAA,MAAA;AAJ7B,aAAA+C,kBAAA,GAAqB,IAAI,0DAAJ,EAArB;AACzB,aAAAC,WAAA,GAAsB,EAAtB;AAGgF;;AAXvD;AAAA;AAAA,eAYzB,qBAAYC,OAAZ,EAAkC;AAChC,eAAKD,WAAL,GAAmB,KAAKE,MAAxB;AACD;AAdwB;AAAA;AAAA,eAgBzB,oBAAW;AACT,eAAKC,QAAL,GAAgB,KAAKL,WAAL,CAAiBM,KAAjB,CAAuB;AACrCzC,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW0C,QAAZ,CAAL;AAD6B,WAAvB,CAAhB;AAID;AArBwB;AAAA;AAAA,eAuBzB,2BAAe;AACb,eAAKC,KAAL;AACD;AAzBwB;AAAA;AAAA,eA2BzB,iBAAQ9B,KAAR,EAAuB;AACrBP,iBAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BM,KAA/B;AACA,eAAKuB,kBAAL,CAAwBQ,IAAxB,CAA6B/B,KAAK,CAACG,IAAN,EAA7B;AACA,eAAK2B,KAAL;AAED;AAhCwB;AAAA;AAAA,eAkCzB,iBAAK;AACH,eAAKtD,MAAL,CAAY8B,KAAZ,CAAkB,KAAK0B,OAAvB;AACD;AApCwB;;AAAA;AAAA,OAA3B;;;;cAWmC;;cAA6B;;;;AAVrB,8DAAxC,gEAAU,SAAV,EAAqB;AAAE,gBAAQ;AAAV,KAArB,CAAwC,G,wBAAA,E,OAAA,E,MAAA;AAEhC,8DAAR,6DAAQ,G,wBAAA,E,SAAA,E,MAAA;AACA,8DAAR,6DAAQ,G,wBAAA,E,iBAAA,E,MAAA;AACA,8DAAR,6DAAQ,G,wBAAA,E,SAAA,E,MAAA;AACA,8DAAR,6DAAQ,G,wBAAA,E,QAAA,E,MAAA;AACgB,8DAAxB,6DAAO,eAAP,CAAwB,G,wBAAA,E,oBAAA,E,MAAA;AAPdX,kBAAc,6DAL1B,gEAAU;AACTN,cAAQ,EAAE,WADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0GAFS;;;;AAAA,KAAV,CAK0B,GAAdK,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAaY,eAAe;AAE1B,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFf;AAAA;AAAA,eAInB,mBAAO;AACZ,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,yBAAd,CAAP;AACD;AANyB;;AAAA;AAAA,OAA5B;;;;cAE4B;;;;AAFfF,mBAAe,6DAH3B,iEAAW;AACVG,gBAAU,EAAE;AADF,KAAX,CAG2B,GAAfH,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAaI,aAAa;AAGxB,+BAAc;AAAA;;AACZ,aAAK7D,MAAL,GAAc,IAAI,gDAAJ,EAAd,CADY,CACe;;AAC3B,YAAI,KAAKA,MAAL,CAAY8D,iBAAZ,EAAJ,EAAqC;AAAE;AACrC7C,iBAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,eAAKlB,MAAL,CAAY+D,IAAZ,CAAiB;AACf,sBAAU,CADK;AAEf,oBAAQ,OAFO;AAGf,oBAAQ,CAHO;AAIf,qBAAS,CAJM;AAKf,qBAAS,yBALM;AAMf,8BAAkB,IANH;AAOf,yBAAa;AACX,iCAAmB,yBAACC,MAAD,EAAY;AAC7B/C,uBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC8C,MAAnC;AACD;AAHU;AAPE,WAAjB,EAYG9E,IAZH,CAYQ,UAAC8B,IAAD,EAAU;AAChB;AACAC,mBAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,IAArD;AACAA,gBAAI,CAACgD,MAAL,CAAYhC,OAAZ,CAAoB,UAAAiC,KAAK,EAAI;AAC3BhD,qBAAO,CAACC,GAAR,CAAY+C,KAAK,CAACC,IAAN,GAAa,GAAb,GAAmBD,KAAK,CAACE,IAArC;AACD,aAFD;AAGD,WAlBD,WAkBS,UAAAhF,CAAC,EAAI;AACZ8B,mBAAO,CAACmD,KAAR,CAAc,wCAAd,EAAwDjF,CAAxD;AACD,WApBD;AAqBD;AACF;;AA7BuB;AAAA;AAAA,eA+BjB,eAAM8C,IAAN,EAAoB;AACzB;AACA,eAAKjC,MAAL,CAAYsD,KAAZ,CAAkB;AAChBe,gBAAI,EAAEpC,IADU;AAEhBqC,iBAAK,EAAE,KAFS,CAEH;;AAFG,WAAlB,EAGGpF,IAHH,CAGQ,YAAM;AACZ+B,mBAAO,CAACC,GAAR,CAAY,WAAZ;AACD,WALD,WAKS,UAAA/B,CAAC,EAAI;AACZ8B,mBAAO,CAACmD,KAAR,CAAc,qBAAd,EAAqCjF,CAArC;AACD,WAPD;AAQD;AAzCuB;;AAAA;AAAA,OAA1B;;AAAa0E,iBAAa,6DAHzB,iEAAW;AACVD,gBAAU,EAAE;AADF,KAAX,CAGyB,GAAbC,aAAa,CAAb;;;;;;;;ACNb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMU,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,uGAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIzD,OAAO,CAACmD,KAAR,CAAcM,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"container\\\">\\r\\n    <h1>{{ currentModule }}</h1>\\r\\n    <button mat-button (click)=\\\"previousModule()\\\">上一模块</button>\\r\\n    <button mat-button (click)=\\\"nextModule()\\\">下一模块</button>\\r\\n\\r\\n    <h3>{{ currentWordIndex + 1 }} / {{ totalWords }}</h3>\\r\\n    <div [ngClass]=\\\"{'disabled': isDisabled}\\\">\\r\\n        <app-words [English]=\\\"english\\\" [PhoneticSymbols]=\\\"phoneticSymbols\\\" [Chinese]=\\\"chinese\\\" [Answer]=\\\"answer\\\"\\r\\n            (answerChanged)=\\\"answerChanged($event)\\\">\\r\\n        </app-words>\\r\\n        <button mat-button (click)=\\\"previousWord()\\\">上一个</button>\\r\\n        <button mat-button (click)=\\\"nextWord()\\\">下一个</button>\\r\\n    </div>\\r\\n    <button mat-button *ngIf=\\\"isCompleted\\\" (click)=\\\"completed()\\\">完成</button>\\r\\n    <button mat-button *ngIf=\\\"wrongCount > 0\\\" (click)=\\\"reTest()\\\">重做错题</button>\\r\\n    <br>\\r\\n    <span *ngIf=\\\"correctCount > 0 || wrongCount > 0\\\">正确：{{ correctCount }}</span>\\r\\n    <span *ngIf=\\\"correctCount > 0 || wrongCount > 0\\\">错误：{{ wrongCount }}</span>\\r\\n    <br>\\r\\n    <ul *ngFor=\\\"let word of wrongWords\\\">\\r\\n        <li>\\r\\n            <p>{{ word.Chinese }}</p>\\r\\n            <p>{{ word.English }}</p>\\r\\n            <p class=\\\"wrongWord\\\">回答：{{ word.answer }}</p>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\";","export default \"<div>\\r\\n    <h2>{{ Chinese }}</h2>\\r\\n    \\r\\n    <button mat-button (click)=\\\"speak()\\\">\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">record_voice_over</mat-icon>\\r\\n    </button>\\r\\n    <mat-form-field>\\r\\n        <input matInput #myInput [(ngModel)]=\\\"answerInput\\\" autocomplete=\\\"off\\\" (change)=\\\"changed($event.target.value)\\\" autofocus>\\r\\n    </mat-form-field>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".wrongWord {\\n  color: red;\\n}\\n\\n.container {\\n  margin-left: 30px;\\n  margin-top: 50px;\\n}\\n\\n.disabled {\\n  pointer-events: none;\\n  /* for \\\"disabled\\\" effect */\\n  opacity: 0.5;\\n  background: #CCC;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRDpcXHRlc3RQcm9qZWN0c1xcdHNcXEVuZ2xpc2hXb3Jkcy9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUE7RUFFRSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FDQUYiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud3JvbmdXb3JkIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxuICAgIG1hcmdpbi10b3A6IDUwcHhcclxufVxyXG5cclxuLmRpc2FibGVkXHJcbntcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAvKiBmb3IgXCJkaXNhYmxlZFwiIGVmZmVjdCAqL1xyXG4gIG9wYWNpdHk6IDAuNTtcclxuICBiYWNrZ3JvdW5kOiAjQ0NDO1xyXG59IiwiLndyb25nV29yZCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5jb250YWluZXIge1xuICBtYXJnaW4tbGVmdDogMzBweDtcbiAgbWFyZ2luLXRvcDogNTBweDtcbn1cblxuLmRpc2FibGVkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIC8qIGZvciBcImRpc2FibGVkXCIgZWZmZWN0ICovXG4gIG9wYWNpdHk6IDAuNTtcbiAgYmFja2dyb3VuZDogI0NDQztcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { GetWordsService } from './service/get-words.service';\r\nimport { SpeechService } from 'src/app/speech.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'EnglishWords';\r\n  allWords: any;\r\n  currentModuleIndex = 0;\r\n  currentModule: any;\r\n  currentWords: any;\r\n  currentWordIndex = 0;\r\n  currentWord: any;\r\n  totalWords = 0;\r\n  correctCount = 0;\r\n  wrongCount = 0;\r\n  wrongWords = [];\r\n  constructor(private getWordsService: GetWordsService, private speech: SpeechService) { }\r\n  ngOnInit(): void {\r\n    this.getWordsService.getJson().subscribe(data => {\r\n      console.log(data);\r\n      this.allWords = data;\r\n      this.goToModule(0)\r\n    })\r\n  }\r\n\r\n  english: string = \"\";\r\n  phoneticSymbols: string = 'ps';\r\n  chinese: string = \"苹果\";\r\n  answer: string = \"\";\r\n  isCompleted: boolean = false;\r\n  isDisabled = false;\r\n\r\n  previousWord() {\r\n    this.currentWordIndex -= 1;\r\n    if (this.currentWordIndex < 0) {\r\n      this.currentWordIndex = 0;\r\n    }\r\n    this.goToWord(this.currentWordIndex);\r\n  }\r\n\r\n  nextWord() {\r\n    this.currentWordIndex += 1;\r\n    if (this.currentWordIndex >= this.currentWords.length) {\r\n      this.currentWordIndex = this.currentWords.length - 1;\r\n    }\r\n    this.goToWord(this.currentWordIndex);\r\n  }\r\n\r\n  answerChanged(value) {\r\n    this.currentWord.answer = value.toString().trim();\r\n    this.isCompleted = this.checkCompleted();\r\n  }\r\n\r\n  goToWord(index) {\r\n    this.currentWord = this.currentWords[index];\r\n    this.english = this.currentWord['English'];\r\n    this.phoneticSymbols = this.currentWord['PhoneticSymbols'];\r\n    this.chinese = this.currentWord['Chinese'];\r\n    this.answer = this.currentWord['answer'];\r\n    this.speech.Speak(this.english);\r\n  }\r\n  checkCompleted(): boolean {\r\n    var count = 0;\r\n    this.currentWords.forEach(word => {\r\n      if (word.answer === undefined) {\r\n      }\r\n      else if (word.answer.length > 0) {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return (count === this.totalWords)\r\n  }\r\n\r\n  nextModule() {\r\n    this.isCompleted = false;\r\n    this.isDisabled = false;\r\n    this.currentModuleIndex += 1;\r\n    console.log(\"this.currentModuleIndex = \", this.currentModuleIndex)\r\n    if (this.currentModuleIndex === this.allWords.length) {\r\n      this.currentModuleIndex = this.allWords.length - 1;\r\n    }\r\n    this.goToModule(this.currentModuleIndex);\r\n  }\r\n\r\n  previousModule() {\r\n    this.isCompleted = false;\r\n    this.isDisabled = false;\r\n    this.currentModuleIndex -= 1;\r\n    if (this.currentModuleIndex < 0) {\r\n      this.currentModuleIndex = 0;\r\n    }\r\n    this.goToModule(this.currentModuleIndex);\r\n  }\r\n\r\n  goToModule(index) {\r\n    this.wrongWords = [];\r\n    this.correctCount = 0\r\n    this.wrongCount = 0;\r\n    this.currentWordIndex = 0;\r\n    this.currentModule = this.allWords[index]['Name'];\r\n\r\n    this.allWords[index]['Words'].forEach(word => {\r\n      if (word.answer === undefined) {\r\n        word.answer = \"\";\r\n      }\r\n    });\r\n\r\n    this.currentWords = this.allWords[index]['Words'];\r\n    this.totalWords = this.currentWords.length;\r\n    this.goToWord(this.currentWordIndex);\r\n  }\r\n\r\n  completed() {\r\n    this.isDisabled = true;\r\n    this.wrongWords = [];\r\n    let correct = 0;\r\n    let wrong = 0;\r\n    this.currentWords.forEach(word => {\r\n      if (word['answer'] === word['English']) {\r\n        correct += 1;\r\n      }\r\n      else {\r\n        wrong += 1;\r\n        this.wrongWords.push(word)\r\n      }\r\n    });\r\n\r\n    this.correctCount = correct;\r\n    this.wrongCount = wrong;\r\n  }\r\n\r\n  reTest() {\r\n    this.isCompleted = false;\r\n    this.isDisabled = false;\r\n    this.currentWords = this.wrongWords;\r\n\r\n    this.currentWords.forEach(word => {\r\n      word['answer'] = \"\";\r\n    });\r\n\r\n    this.wrongWords = [];\r\n    this.correctCount = 0\r\n    this.wrongCount = 0\r\n    this.currentWordIndex = 0;\r\n    this.totalWords = this.currentWords.length;\r\n    this.goToWord(this.currentWordIndex);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WordsComponent } from './components/words/words.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WordsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvd29yZHMvd29yZHMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SpeechService } from 'src/app/speech.service';\r\n\r\n@Component({\r\n  selector: 'app-words',\r\n  templateUrl: './words.component.html',\r\n  styleUrls: ['./words.component.scss']\r\n})\r\nexport class WordsComponent implements OnInit, OnChanges {\r\n  @ViewChild('myInput', { static: false }) input: ElementRef;\r\n\r\n  @Input() English: string;\r\n  @Input() PhoneticSymbols: string;\r\n  @Input() Chinese: string;\r\n  @Input() Answer: string;\r\n  @Output('answerChanged') answerChangedEvent = new EventEmitter<any>()\r\n  answerInput: string = \"\";\r\n\r\n  wordFrom: FormGroup;\r\n  constructor(private formBuilder: FormBuilder, private speech: SpeechService) { }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.answerInput = this.Answer;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.wordFrom = this.formBuilder.group({\r\n      answer: ['', [Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.speak();\r\n  }\r\n\r\n  changed(value: String) {\r\n    console.log(\"changed.value = \",value)\r\n    this.answerChangedEvent.emit(value.trim());\r\n    this.speak();\r\n\r\n  }\r\n\r\n  speak(){\r\n    this.speech.Speak(this.English);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetWordsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getJson(): Observable<any>{\r\n    return this.http.get(\"../assets/json/8_1.json\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport Speech from 'speak-tts';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpeechService {\r\n  speech: any;\r\n\r\n  constructor() {\r\n    this.speech = new Speech() // will throw an exception if not browser supported\r\n    if (this.speech.hasBrowserSupport()) { // returns a boolean\r\n      console.log(\"speech synthesis supported\")\r\n      this.speech.init({\r\n        'volume': 1,\r\n        'lang': 'en-GB',\r\n        'rate': 1,\r\n        'pitch': 1,\r\n        'voice': 'Google US English en-US',\r\n        'splitSentences': true,\r\n        'listeners': {\r\n          'onvoiceschanged': (voices) => {\r\n            console.log(\"Event voiceschanged\", voices)\r\n          }\r\n        }\r\n      }).then((data) => {\r\n        // The \"data\" object contains the list of available voices and the voice synthesis params\r\n        console.log(\"Speech is ready, voices are available\", data)\r\n        data.voices.forEach(voice => {\r\n          console.log(voice.name + \" \" + voice.lang)\r\n        });\r\n      }).catch(e => {\r\n        console.error(\"An error occured while initializing : \", e)\r\n      })\r\n    }\r\n  }\r\n\r\n  public Speak(word: string) {\r\n    //console.log(`speak start ${word} `)\r\n    this.speech.speak({\r\n      text: word,\r\n      queue: false // current speech will be interrupted,\r\n    }).then(() => {\r\n      console.log(\"Success !\")\r\n    }).catch(e => {\r\n      console.error(\"An error occurred :\", e)\r\n    })\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}